//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "shopping_cart_product")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub shopping_cart_id: String,
    pub product_id: String,
    #[sea_orm(column_type = "Decimal(Some((15, 2)))")]
    pub value: Decimal,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::product::Entity",
        from = "Column::ProductId",
        to = "super::product::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Product,
    #[sea_orm(
        belongs_to = "super::shopping_cart::Entity",
        from = "Column::ShoppingCartId",
        to = "super::shopping_cart::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    ShoppingCart,
}

impl Related<super::product::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Product.def()
    }
}

impl Related<super::shopping_cart::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ShoppingCart.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
